export default {
  accountPage: {
    accountTitle: 'Account',
    infoHeader: 'Information',
    emailLabel: 'Email',
    cloudSyncHeader: 'Cloud Sync',
    cloudSyncDescription:
      'Real-time cloud synchronization service across devices, which can synchronize all data such as workspaces, dialogs, assistants, settings, and plugins.',
    cloudSyncPrice: 'Price is {price} yuan/month',
    statusLabel: 'Status',
    evalLabel: 'Trial',
    evalDaysLeft: 'Remaining trial days: {days}',
    subscribeButton: 'Subscribe',
    subscribedLabel: 'Subscribed',
    validUntil: 'Valid until {date}',
    renewButton: 'Renew',
    modelServicesHeader: 'Model Services',
    modelServicesDescription:
      'One-stop access to various advanced models from different service providers, including deepseek-reasoner, claude-3-5-sonnet, o3-mini, etc., without configuration. Top up as you go, valid forever. Charges are based on the official API price (calculated at USD/CNY=7).',
    modelPricingLink: 'Model Pricing',
    usingDefaultService: 'Using (as global default provider)',
    customService: 'Not used (global custom provider configured)',
    remainingBudget: 'Remaining Budget',
    topupButton: 'Top Up',
    orderHistoryHeader: 'Order History',
    contactDeveloper:
      'If you encounter any issues with your order, please contact the developer, Email:',
    logoutButton: 'Log Out',
    licenseOk: 'Enabled',
    licenseExpired: 'Expired',
    licenseDeactivated: 'Deactivated',
    licenseUnknown: 'Unknown',
    orderId: 'Order ID',
    paymentTime: 'Payment Time',
    orderType: 'Type',
    syncServiceType: 'Cloud Sync Service',
    apiBudgetType: 'Model Budget',
    amount: 'Amount'
  },
  modelPricing: {
    modelPrice: 'Model Pricing',
    modelPerformance: 'Model Performance',
    modelPerformanceDescription1:
      'Taking gpt-4o as the performance benchmark, compared to it, claude-3-5-sonnet is stronger in code, the o1 series is particularly good at logical reasoning, and gemini-1.5-pro is a cheaper alternative.',
    modelPerformanceDescription2:
      'gpt-4o-mini and gemini-1.5-flash are good choices for low-cost models, costing an order of magnitude less than the models above, and are suitable for simple questions and scenarios requiring a large amount of output.',
    modelPerformanceDescription3:
      'The first tier of domestic models includes Tongyi Qianwen (qwen) and deepseek; deepseek v3 (i.e., the current deepseek-chat) is the first domestic model to truly reach the level of gpt-4o, and deepseek r1 (i.e., the current deepseek-reasoner) is the first reasoning model to match o1; other domestic models (Wenxin Yiyan, Doubao, Kimi, etc.) are still behind. For model rankings, please refer to',
    modelPerformanceDescription4:
      'In addition, there are several free models (with a price of 0 below), which are mainly experimental models. The availability of free models is not guaranteed.',
    disclaimer: 'The above views are for reference only, and the actual model effect shall prevail',
    usageCalculator: 'Usage Calculator',
    usageCalculatorDescription: 'All models are charged at the official API price of each service provider, calculated at the USD/CNY exchange rate of 7.',
    budgetLabel: 'Budget (CNY)',
    modelLabel: 'Model',
    outputLabel: 'Output Words',
    tokenCalculationDescription:
      'Calculated at 1.4 Chinese characters (new GPT models) or 1 Chinese character (other models) or 1.8 Chinese characters (domestic models) per token output. The actual ratio fluctuates and is slightly larger on average, but input costs must also be considered',
    availableModels: 'Available Models',
    getModelPriceFailed: 'Failed to get model price',
    inputPrice: 'Input Price',
    outputPrice: 'Output Price',
    freeModelDisclaimer: 'In addition, there are several free models (with a price of 0 below), which are mainly experimental models. The availability of free models is not guaranteed.',
    performanceNote: 'The above views are for reference only, and the actual model effect shall prevail',
    usageDescription: 'All models are charged at the official API price of each service provider, calculated at the USD/CNY exchange rate of 7.',
    tokenOutputNote: 'Calculated at 1.4 Chinese characters (new GPT models) or 1 Chinese character (other models) or 1.8 Chinese characters (domestic models) per token output. The actual ratio fluctuates and is slightly larger on average, but input costs must also be considered',
    currencyCNY: 'ï¿¥',
    currencyUSD: '$',
    unitKTokens: 'K Tokens',
    unitMTokens: 'M Tokens',
    modelName: 'Model'
  },
  pluginsPage: {
    installedPlugins: 'Installed Plugins'
  },
  setProviderPage: {
    providerSet: 'Provider set to: {baseURL}',
    restore: 'Restore',
    providerSetFailed: 'Failed to set provider: incorrect format'
  },
  shortcutKeysPage: {
    keyboardShortcuts: 'Keyboard Shortcuts',
    enableKeyboardShortcuts: 'Enable Keyboard Shortcuts',
    dialogPage: 'Dialog Page',
    scrollUp: 'Scroll Up',
    scrollDown: 'Scroll Down',
    scrollToTop: 'Scroll to Top',
    scrollToBottom: 'Scroll to Bottom',
    switchToPreviousThread: 'Switch to Previous Thread',
    switchToNextThread: 'Switch to Next Thread',
    switchToFirstThread: 'Switch to First Thread',
    switchToLastThread: 'Switch to Last Thread',
    regenerateAssistantMessage: 'Regenerate Assistant Message',
    editUserMessage: 'Edit User Message',
    focusInputBox: 'Focus Input Box',
    dialogList: 'Dialog List',
    newDialog: 'New Dialog',
    editArtifacts: 'Edit Artifacts',
    saveArtifact: 'Save Artifact'
  },
  settingsPage: {
    title: 'Settings',
    customProviderHeader: 'Custom Provider',
    shareLinkLabel: 'Share Link',
    shareLinkCaption: 'Used to share your provider settings. Others will automatically apply this setting when they open the link',
    copyLinkLabel: 'Copy Link',
    noProviderConfigured: 'No custom provider is currently configured, and we will use the model services we provide by default. See',
    accountPage: 'Account',
    pageSuffix: 'Page',
    defaultModelHeader: 'Default Model',
    systemAssistantHeader: 'System Assistant',
    systemAssistantCaption: 'Used to summarize dialog titles and extract Artifacts. If left blank, the default provider settings will be used',
    operationHeader: 'Operation',
    autoSummarizeTitle: 'Auto Summarize Dialog Title',
    autoSummarizeCaption: 'Automatically summarize the title at the end of the first round of dialog',
    messageSelectionMenu: 'Message Selection Text Menu',
    messageSelectionCaption: 'Display operation buttons when selecting message text',
    codePasteOptimize: 'Code Paste Optimization',
    codePasteCaption: 'Automatically wrap code copied from VSCode with markdown code blocks',
    quickScrollButton: 'Quick Scroll Button',
    quickScrollCaption: 'Display quick scroll buttons in the lower right corner of the dialog. After closing, you can still use keyboard shortcuts to scroll',
    autoFocusInput: 'Auto Focus Dialog Input Box',
    autoLockBottom: 'Auto Lock Bottom When Generating',
    messageContentCatalog: 'Message Content Catalog',
    messageContentCatalogCaption: 'Display the catalog next to the message when there is enough space',
    artifactsSettings: 'Artifacts Settings',
    enableArtifacts: 'Enable Artifacts Function',
    autoExtractArtifact: 'Auto Extract Artifact',
    autoExtractArtifactCaption: 'Automatically extract Artifacts from assistant responses',
    reserveOriginalArtifact: 'Reserve Original Text When Extracting',
    autoNameArtifact: 'Automatically Name Artifact by Default',
    sendKeyShortcut: 'Send Message Shortcut',
    keyboardShortcuts: 'Keyboard Shortcuts',
    uiHeader: 'UI',
    appearance: 'Appearance',
    themeColor: 'Theme Color',
    userAvatar: 'User Avatar',
    commonModels: 'Common Models',
    commonModelsCaption: 'Used to quickly switch models in dialogs.',
    getModelList: 'Get Model List',
    showWarnings: 'Show Warnings',
    showWarningsCaption: 'Show warning messages in the response',
    markdownRendering: 'Markdown Rendering',
    theme: 'Theme',
    codeTheme: 'Code Theme',
    disableMermaid: 'Disable Mermaid',
    codeAutoFoldThreshold: 'Code Auto Fold Threshold',
    codeAutoFoldThresholdCaption: 'Automatically fold code blocks after exceeding this number of lines. Default is no folding',
    dataHeader: 'Data',
    userData: 'User Data',
    export: 'Export',
    import: 'Import',
    restoreDefaultSettings: 'Restore Default Settings',
    restoreSettingsConfirmation: 'Are you sure you want to restore all settings to default?',
    followSystem: 'Follow System',
    light: 'Light',
    dark: 'Dark',
    selectCommonModels: 'Select Common Models',
    getModelListFailed: 'Failed to get model list',
    exportFailed: 'Export Failed',
    auto: 'Auto',
    language: 'Language'
  },
  errorNotFoundPage: {
    message: 'There\'s nothing here...'
  },
  assistantsPage: {
    globalAssistant: 'Global Assistant'
  },
  workspacePage: {
    closeArtifact: 'Close',
    closeAllArtifacts: 'Close All Artifacts',
    workspaceHome: 'Workspace Home',
    workspaceSettings: 'Workspace Settings',
    assistants: 'Assistants',
    artifactsGuide: 'Refer to',
    artifactsGuideLink: 'Artifacts Usage Guide',
    create: 'Create',
    selectFile: 'File',
    dialogs: 'Dialogs',
    createArtifact: 'Create Artifact',
    name: 'Name',
    nonTextFile: 'Non-text file: {name}'
  },
  mainLayout: {
    workspace: 'Workspace | Workspaces',
    assistants: 'Assistants',
    plugins: 'Plugins',
    settings: 'Settings',
    usageGuide: 'Usage Guide',
    currentVersion: 'Current Version',
    changeLog: 'Change Log'
  }
}
